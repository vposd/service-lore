@import '../../variables';
@import 'variables';
@import 'mixins';

:root {
  @each $size in map-keys($layout-grid-columns) {
    --layout-grid-margin-#{$size}: #{map-get(
        $layout-grid-default-margin,
        $size
      )};
    --layout-grid-gutter-#{$size}: #{map-get(
        $layout-grid-default-gutter,
        $size
      )};
    --layout-grid-column-width-#{$size}: #{map-get(
        $layout-grid-column-width,
        $size
      )};
  }
}

// postcss-bem-linter: define layout-grid

.layout-grid {
  @each $size in map-keys($layout-grid-columns) {
    @include layout-grid-media-query($size) {
      $margin: map-get($layout-grid-default-margin, $size);

      @include layout-grid($size, $margin, $layout-grid-max-width);
    }
  }

  &--dense {
    padding: 0;
  }
}

.layout-grid__inner {
  @each $size in map-keys($layout-grid-columns) {
    @include layout-grid-media-query($size) {
      $margin: map-get($layout-grid-default-margin, $size);
      $gutter: map-get($layout-grid-default-gutter, $size);

      @include layout-grid-inner($size, $margin, $gutter);
    }
  }
}

.layout-grid__cell {
  $upper-breakpoint: nth(map-keys($layout-grid-columns), 1);

  @each $size in map-keys($layout-grid-columns) {
    @include layout-grid-media-query($size) {
      $gutter: map-get($layout-grid-default-gutter, $size);

      @include layout-grid-cell(
        $size,
        $layout-grid-default-column-span,
        $gutter
      );

      @for $span from 1 through map-get($layout-grid-columns, $upper-breakpoint)
      {
        // stylelint-disable max-nesting-depth
        @at-root .layout-grid__cell--span-#{$span},
          .layout-grid__cell--span-#{$span}-#{$size} {
          @include layout-grid-cell-span($size, $span, $gutter);
        }
        // stylelint-enable max-nesting-depth
      }
    }
  }

  @for $i from 1 through map-get($layout-grid-columns, $upper-breakpoint) {
    &--order-#{$i} {
      @include layout-grid-cell-order($i);
    }
  }

  &--align-top {
    @include layout-grid-cell-align(top);
  }

  &--align-middle {
    @include layout-grid-cell-align(middle);
  }

  &--align-bottom {
    @include layout-grid-cell-align(bottom);
  }
}

.layout-grid--fixed-column-width {
  @each $size in map-keys($layout-grid-columns) {
    @include layout-grid-media-query($size) {
      $margin: map-get($layout-grid-default-margin, $size);
      $gutter: map-get($layout-grid-default-gutter, $size);
      $column-width: map-get($layout-grid-column-width, $size);

      @include layout-grid-fixed-column-width(
        $size,
        $margin,
        $gutter,
        $column-width
      );
    }
  }
}

.layout-grid--align-left {
  margin-right: auto;
  margin-left: 0;
}

.layout-grid--align-right {
  margin-right: 0;
  margin-left: auto;
}

.layout-grid--gapless {
  padding: 0;

  .layout-grid__inner {
    grid-gap: 0 !important;
  }
}

// postcss-bem-linter: end
